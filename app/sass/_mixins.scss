// SASS do Equiparlab
// Projeto www.equiparlab.com.br
// Autor Joao Paulo Fricks

//
// Mixins
// --------------------------------------------------

// border radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

// shadow box
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
   -webkit-box-shadow:$top $left $blur $color #{$inset};
   -moz-box-shadow:$top $left $blur $color #{$inset};
   box-shadow:$top $left $blur $color #{$inset};
}

// text shadow
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
   text-shadow: $x $y $blur $color;
}

// placeholder
@mixin optional-at-root($sel) {
   @at-root #{if(not &, $sel, selector-append(&, $sel))} {
      @content;
   }
}
@mixin placeholder {
   @include optional-at-root('::-webkit-input-placeholder') {
      @content;
   }

   @include optional-at-root(':-moz-placeholder') {
      @content;
   }

   @include optional-at-root('::-moz-placeholder') {
      @content;
   }

   @include optional-at-root(':-ms-input-placeholder') {
      @content;
   }
}

// transtions
@mixin transition($args...) {
   -webkit-transition: $args;
   -moz-transition: $args;
   -ms-transition: $args;
   -o-transition: $args;
   transition: $args;
}

// opacity
@mixin opacity($opacity) {
   opacity: $opacity;
   $opacity-ie: $opacity * 100;
   filter: alpha(opacity=$opacity-ie); //IE8
}

// vertical align
@mixin vertical-align {
   position: relative;
   top: 50%;
   -webkit-transform: translateY(-50%);
   -ms-transform: translateY(-50%);
   transform: translateY(-50%);
}

// no padding
@mixin no-padding($side) {
   @if $side == 'all' {
      .no-padding {
         padding: 0 !important;
      }
   } @else {
      .no-padding-#{$side} {
         padding-#{$side}: 0 !important;
      }
   }
}
@include no-padding("left");
@include no-padding("right");
@include no-padding("top");
@include no-padding("bottom");
@include no-padding("all");

// rem to pixel fallback
@function calculateRem($size) {
  $remSize: $size / 14px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


// Block Grid
// Technique adapted from Foundation 5 for Bootstrap 3.
// https://github.com/zurb/foundation/blob/f755d8704123f86c281ede0b171881e2672f150d/scss/foundation/components/_block-grid.scss
// Original LESS Version by Christopher Mitchell (https://gist.github.com/ChrisTM)
// Converted to SCSS by Rasmus JÃ¼rs (https://github.com/Jursdotme)
[class*="block-grid-"] {
   display: block;
   //margin: -($grid-gutter-width/2);
   margin: 0 -15px;
   padding: 0;
   @include clearfix();
}
.block-grid-item {
   display: inline;
   margin: 0;
   padding: ($grid-gutter-width/2);
   height: auto;
   float: left;
   list-style: none;
}
@mixin block-grid ($per-row) {
   & > .block-grid-item {
      width: (100%/$per-row);
      $nth-equation: #{$per-row}n+'+'+1;
      &:nth-of-type(n) { clear: none; }
      &:nth-of-type(#{$nth-equation}) { clear: both; }
   }
}
@mixin block-grids($size) {
   .block-grid-#{$size}-1 { @include block-grid(1); }
   .block-grid-#{$size}-2 { @include block-grid(2); }
   .block-grid-#{$size}-3 { @include block-grid(3); }
   .block-grid-#{$size}-4 { @include block-grid(4); }
   .block-grid-#{$size}-5 { @include block-grid(5); }
   .block-grid-#{$size}-6 { @include block-grid(6); }
   .block-grid-#{$size}-7 { @include block-grid(7); }
   .block-grid-#{$size}-8 { @include block-grid(8); }
   .block-grid-#{$size}-9 { @include block-grid(9); }
   .block-grid-#{$size}-10 { @include block-grid(10); }
   .block-grid-#{$size}-11 { @include block-grid(11); }
   .block-grid-#{$size}-12 { @include block-grid(12); }
}
@include block-grids(xs);
@media (min-width: $screen-sm-min) { @include block-grids(sm) }
@media (min-width: $screen-md-min) { @include block-grids(md) }
@media (min-width: $screen-lg-min) { @include block-grids(lg) }
